package wcf;




//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.9.0
//
// Created by Quasar Development at 31-10-2015
//
//---------------------------------------------------


import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.transport.HttpsTransportSE;

import java.util.List;


public class PatientBinding
{
    interface UPNIWcfMethod
    {
        ExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws java.lang.Exception;

        java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object result) throws java.lang.Exception;
    }

    String url = "http://meetmdservice.azurewebsites.net/API/XmlService.svc/Patient/";

    int timeOut = 8000;
    public List< HeaderProperty> httpHeaders;
    public boolean enableLogging;

    IServiceEvents callback;

    public void setCallback(IServiceEvents callback) {
        this.callback = callback;
    }
    public PatientBinding(){}

    public PatientBinding(IServiceEvents callback)
    {
        this.callback = callback;
    }
    public PatientBinding(IServiceEvents callback, String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public PatientBinding(IServiceEvents callback, String url, int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected org.ksoap2.transport.Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                return new HttpsTransportSE(uri.getHost(), port, uri.getPath(), timeOut);
            }
            else
            {
                return new HttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }

    protected ExtendedSoapSerializationEnvelope createEnvelope()
    {
        ExtendedSoapSerializationEnvelope envelope = new ExtendedSoapSerializationEnvelope(wcf.ExtendedSoapSerializationEnvelope.VER11);
        return envelope;
    }

    protected java.util.List sendRequest(String methodName, ExtendedSoapSerializationEnvelope envelope, org.ksoap2.transport.Transport transport) throws java.lang.Exception
    {
        return transport.call(methodName, envelope, httpHeaders);
    }

    java.lang.Object getResult(java.lang.Class destObj, java.lang.Object source, String resultName, ExtendedSoapSerializationEnvelope __envelope) throws java.lang.Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                java.lang.Object instance = __envelope.get(source, destObj);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                java.lang.Object j = soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                java.lang.Object instance = __envelope.get(j, destObj);
                return instance;
            }
            else if( soap.getName().equals(resultName)) {
                java.lang.Object instance = __envelope.get(source, destObj);
                return instance;
            }
        }

        return null;
    }


    public RequestResultOfAuthtokenXml PatientLogin(final String insuranceNumber, final String password) throws java.lang.Exception
    {
        return (RequestResultOfAuthtokenXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientLogin");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="insuranceNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(insuranceNumber!=null?insuranceNumber:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="password";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(password!=null?password:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfAuthtokenXml.class, __result, "PatientLoginResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientLogin");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfAuthtokenXml>, Void, OperationResult<RequestResultOfAuthtokenXml>> PatientLoginAsync(final String insuranceNumber, final String password)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfAuthtokenXml>() {
            public RequestResultOfAuthtokenXml Func() throws java.lang.Exception {
                return PatientLogin( insuranceNumber,password);
            }
        });
    }

    public RequestResultOfPatientXml PatientGetFullInformation(final AuthtokenXml authToken) throws java.lang.Exception
    {
        return (RequestResultOfPatientXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/", "authToken", new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetFullInformation");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info = null;
                __info = new PropertyInfo();
                __info.namespace = "http://tempuri.org/";
                __info.name = "authToken";
                __info.type = AuthtokenXml.class;
                __info.setValue(authToken != null ? authToken : SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfPatientXml.class, __result, "PatientGetFullInformationResult", __envelope);
            }
        }, "http://tempuri.org/IPatient/PatientGetFullInformation");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfPatientXml>, Void, OperationResult<RequestResultOfPatientXml>> PatientGetFullInformationAsync(final AuthtokenXml authToken) {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfPatientXml>() {
            public RequestResultOfPatientXml Func() throws java.lang.Exception {
                return PatientGetFullInformation(authToken);
            }
        });
    }

    public RequestResultOfboolean PatientCheckRegistered(final String insuranceNumber) throws java.lang.Exception {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod() {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope() {
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientCheckRegistered");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="insuranceNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(insuranceNumber!=null?insuranceNumber:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientCheckRegisteredResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientCheckRegistered");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientCheckRegisteredAsync(final String insuranceNumber)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientCheckRegistered( insuranceNumber);
            }
        });
    }

    public RequestResultOfboolean PatientLogout(final AuthtokenXml authToken) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientLogout");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientLogoutResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientLogout");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientLogoutAsync(final AuthtokenXml authToken)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientLogout( authToken);
            }
        });
    }

    public RequestResultOfboolean PatientChangePassword(final AuthtokenXml authToken, final String password) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientChangePassword");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="password";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(password!=null?password:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientChangePasswordResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientChangePassword");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientChangePasswordAsync(final AuthtokenXml authToken, final String password)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientChangePassword( authToken,password);
            }
        });
    }

    public RequestResultOfboolean PatientResetPassword(final String insuranceNumber) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientResetPassword");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="insuranceNumber";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(insuranceNumber!=null?insuranceNumber:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientResetPasswordResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientResetPassword");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientResetPasswordAsync(final String insuranceNumber)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientResetPassword( insuranceNumber);
            }
        });
    }

    public RequestResultOfArrayOfServiceProviderXml PatientSearchProviderByName(final AuthtokenXml authToken, final String providerNamePattern) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfServiceProviderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientSearchProviderByName");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="providerNamePattern";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(providerNamePattern!=null?providerNamePattern:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfServiceProviderXml.class, __result, "PatientSearchProviderByNameResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientSearchProviderByName");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfServiceProviderXml>, Void, OperationResult<RequestResultOfArrayOfServiceProviderXml>> PatientSearchProviderByNameAsync(final AuthtokenXml authToken, final String providerNamePattern)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfServiceProviderXml>() {
            public RequestResultOfArrayOfServiceProviderXml Func() throws java.lang.Exception {
                return PatientSearchProviderByName( authToken,providerNamePattern);
            }
        });
    }

    public RequestResultOfArrayOfServiceProviderXml PatientSearchProviderByCoordinates(final AuthtokenXml authToken, final String coordinates, final Integer range) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfServiceProviderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientSearchProviderByCoordinates");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="coordinates";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(coordinates!=null?coordinates:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="range";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(range!=null?range:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfServiceProviderXml.class, __result, "PatientSearchProviderByCoordinatesResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientSearchProviderByCoordinates");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfServiceProviderXml>, Void, OperationResult<RequestResultOfArrayOfServiceProviderXml>> PatientSearchProviderByCoordinatesAsync(final AuthtokenXml authToken, final String coordinates, final Integer range)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfServiceProviderXml>() {
            public RequestResultOfArrayOfServiceProviderXml Func() throws java.lang.Exception {
                return PatientSearchProviderByCoordinates( authToken,coordinates,range);
            }
        });
    }

    public RequestResultOfArrayOfServiceProviderXml PatientSearchProviderByAddress(final AuthtokenXml authToken, final String address, final Integer range) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfServiceProviderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientSearchProviderByAddress");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="address";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(address!=null?address:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="range";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(range!=null?range:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfServiceProviderXml.class, __result, "PatientSearchProviderByAddressResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientSearchProviderByAddress");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfServiceProviderXml>, Void, OperationResult<RequestResultOfArrayOfServiceProviderXml>> PatientSearchProviderByAddressAsync(final AuthtokenXml authToken, final String address, final Integer range)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfServiceProviderXml>() {
            public RequestResultOfArrayOfServiceProviderXml Func() throws java.lang.Exception {
                return PatientSearchProviderByAddress( authToken,address,range);
            }
        });
    }

    public RequestResultOfArrayOfServiceProviderXml PatientSearchProviderBySpeciality(final AuthtokenXml authToken, final String speciality) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfServiceProviderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientSearchProviderBySpeciality");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="speciality";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(speciality!=null?speciality:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfServiceProviderXml.class, __result, "PatientSearchProviderBySpecialityResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientSearchProviderBySpeciality");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfServiceProviderXml>, Void, OperationResult<RequestResultOfArrayOfServiceProviderXml>> PatientSearchProviderBySpecialityAsync(final AuthtokenXml authToken, final String speciality)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfServiceProviderXml>() {
            public RequestResultOfArrayOfServiceProviderXml Func() throws java.lang.Exception {
                return PatientSearchProviderBySpeciality( authToken,speciality);
            }
        });
    }

    public RequestResultOfArrayOfstring PatientGetSpecialities(final AuthtokenXml authToken) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfstring) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetSpecialities");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfstring.class, __result, "PatientGetSpecialitiesResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetSpecialities");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfstring>, Void, OperationResult<RequestResultOfArrayOfstring>> PatientGetSpecialitiesAsync(final AuthtokenXml authToken)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfstring>() {
            public RequestResultOfArrayOfstring Func() throws java.lang.Exception {
                return PatientGetSpecialities( authToken);
            }
        });
    }

    public RequestResultOfArrayOfTimeslotXml PatientGetAgenda(final AuthtokenXml authToken, final String providerId) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfTimeslotXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetAgenda");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="providerId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(providerId!=null?providerId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfTimeslotXml.class, __result, "PatientGetAgendaResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetAgenda");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfTimeslotXml>, Void, OperationResult<RequestResultOfArrayOfTimeslotXml>> PatientGetAgendaAsync(final AuthtokenXml authToken, final String providerId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfTimeslotXml>() {
            public RequestResultOfArrayOfTimeslotXml Func() throws java.lang.Exception {
                return PatientGetAgenda( authToken,providerId);
            }
        });
    }

    public RequestResultOfArrayOfPatientReminderXml PatientCreateAppointment(final AuthtokenXml authToken, final String timeslotId) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfPatientReminderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientCreateAppointment");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="timeslotId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(timeslotId!=null?timeslotId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfPatientReminderXml.class, __result, "PatientCreateAppointmentResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientCreateAppointment");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfPatientReminderXml>, Void, OperationResult<RequestResultOfArrayOfPatientReminderXml>> PatientCreateAppointmentAsync(final AuthtokenXml authToken, final String timeslotId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfPatientReminderXml>() {
            public RequestResultOfArrayOfPatientReminderXml Func() throws java.lang.Exception {
                return PatientCreateAppointment( authToken,timeslotId);
            }
        });
    }

    public RequestResultOfboolean PatientJoinWaitinglistProvider(final AuthtokenXml authToken, final String providerId) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientJoinWaitinglistProvider");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="providerId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(providerId!=null?providerId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientJoinWaitinglistProviderResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientJoinWaitinglistProvider");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientJoinWaitinglistProviderAsync(final AuthtokenXml authToken, final String providerId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientJoinWaitinglistProvider( authToken,providerId);
            }
        });
    }

    public RequestResultOfboolean PatientJoinWaitinglistSpeciality(final AuthtokenXml authToken, final String speciality, final String region) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientJoinWaitinglistSpeciality");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="speciality";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(speciality!=null?speciality:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="region";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(region!=null?region:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientJoinWaitinglistSpecialityResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientJoinWaitinglistSpeciality");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientJoinWaitinglistSpecialityAsync(final AuthtokenXml authToken, final String speciality, final String region)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientJoinWaitinglistSpeciality( authToken,speciality,region);
            }
        });
    }

    public RequestResultOfArrayOfAppointmentXml PatientGetAppointments(final AuthtokenXml authToken, final java.util.Date strartDate, final java.util.Date endDate) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfAppointmentXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetAppointments");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="strartDate";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(strartDate != null ? wcf.Helper.getDateTimeFormat().format(strartDate) : SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="endDate";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(endDate != null ? wcf.Helper.getDateTimeFormat().format(endDate) : SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfAppointmentXml.class, __result, "PatientGetAppointmentsResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetAppointments");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfAppointmentXml>, Void, OperationResult<RequestResultOfArrayOfAppointmentXml>> PatientGetAppointmentsAsync(final AuthtokenXml authToken, final java.util.Date strartDate, final java.util.Date endDate)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfAppointmentXml>() {
            public RequestResultOfArrayOfAppointmentXml Func() throws java.lang.Exception {
                return PatientGetAppointments( authToken,strartDate,endDate);
            }
        });
    }

    public RequestResultOfArrayOfHospitalXml PatientGetHospitalsByCoordinates(final AuthtokenXml authToken, final String coordinates, final Integer range) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfHospitalXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetHospitalsByCoordinates");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="coordinates";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(coordinates!=null?coordinates:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="range";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(range!=null?range:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfHospitalXml.class, __result, "PatientGetHospitalsByCoordinatesResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetHospitalsByCoordinates");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfHospitalXml>, Void, OperationResult<RequestResultOfArrayOfHospitalXml>> PatientGetHospitalsByCoordinatesAsync(final AuthtokenXml authToken, final String coordinates, final Integer range)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfHospitalXml>() {
            public RequestResultOfArrayOfHospitalXml Func() throws java.lang.Exception {
                return PatientGetHospitalsByCoordinates(authToken, coordinates, range);
            }
        });
    }

    public RequestResultOfArrayOfHospitalXml PatientGetHospitalsByAddress(final AuthtokenXml authToken, final String address, final Integer range) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfHospitalXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetHospitalsByAddress");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="address";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(address!=null?address:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="range";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(range!=null?range:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfHospitalXml.class, __result, "PatientGetHospitalsByAddressResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetHospitalsByAddress");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfHospitalXml>, Void, OperationResult<RequestResultOfArrayOfHospitalXml>> PatientGetHospitalsByAddressAsync(final AuthtokenXml authToken, final String address, final Integer range)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfHospitalXml>() {
            public RequestResultOfArrayOfHospitalXml Func() throws java.lang.Exception {
                return PatientGetHospitalsByAddress( authToken,address,range);
            }
        });
    }

    public RequestResultOfboolean PatientCancelAppointment(final AuthtokenXml authToken, final String appointmentId) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientCancelAppointment");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="appointmentId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(appointmentId!=null?appointmentId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientCancelAppointmentResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientCancelAppointment");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientCancelAppointmentAsync(final AuthtokenXml authToken, final String appointmentId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientCancelAppointment( authToken,appointmentId);
            }
        });
    }

    public RequestResultOfboolean PatientChangeAppointment(final AuthtokenXml authToken, final String appointmentId, final String newTimeslotId) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientChangeAppointment");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="appointmentId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(appointmentId!=null?appointmentId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="newTimeslotId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(newTimeslotId!=null?newTimeslotId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientChangeAppointmentResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientChangeAppointment");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientChangeAppointmentAsync(final AuthtokenXml authToken, final String appointmentId, final String newTimeslotId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientChangeAppointment( authToken,appointmentId,newTimeslotId);
            }
        });
    }

    public RequestResultOfArrayOfCustomerSurveyXml PatientGetSurveys(final AuthtokenXml authToken, final Integer surveyState) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfCustomerSurveyXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetSurveys");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="surveyState";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(surveyState!=null?surveyState:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfCustomerSurveyXml.class, __result, "PatientGetSurveysResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetSurveys");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfCustomerSurveyXml>, Void, OperationResult<RequestResultOfArrayOfCustomerSurveyXml>> PatientGetSurveysAsync(final AuthtokenXml authToken, final Integer surveyState)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfCustomerSurveyXml>() {
            public RequestResultOfArrayOfCustomerSurveyXml Func() throws java.lang.Exception {
                return PatientGetSurveys( authToken,surveyState);
            }
        });
    }

    public RequestResultOfboolean PatientFillinSurvey(final AuthtokenXml authToken, final String surveyId, final ArrayOfCustomerSurveyResultXml results) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                __envelope.addMapping("http://tempuri.org/","results",new ArrayOfCustomerSurveyResultXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientFillinSurvey");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="surveyId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(surveyId!=null?surveyId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="results";
                __info.type=PropertyInfo.VECTOR_CLASS;
                __info.setValue(results!=null?results:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientFillinSurveyResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientFillinSurvey");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientFillinSurveyAsync(final AuthtokenXml authToken, final String surveyId, final ArrayOfCustomerSurveyResultXml results)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientFillinSurvey( authToken,surveyId,results);
            }
        });
    }

    public RequestResultOfboolean PatientCreateReminder(final AuthtokenXml authToken, final PatientReminderXml reminder) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                __envelope.addMapping("http://tempuri.org/","reminder",new PatientReminderXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientCreateReminder");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="reminder";
                __info.type= PatientReminderXml.class;
                __info.setValue(reminder!=null?reminder:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientCreateReminderResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientCreateReminder");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientCreateReminderAsync(final AuthtokenXml authToken, final PatientReminderXml reminder)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientCreateReminder( authToken,reminder);
            }
        });
    }

    public RequestResultOfboolean PatientRemoveReminder(final AuthtokenXml authToken, final String reminderId) throws java.lang.Exception
    {
        return (RequestResultOfboolean) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientRemoveReminder");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="reminderId";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(reminderId!=null?reminderId:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfboolean.class, __result, "PatientRemoveReminderResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientRemoveReminder");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfboolean>, Void, OperationResult<RequestResultOfboolean>> PatientRemoveReminderAsync(final AuthtokenXml authToken, final String reminderId)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfboolean>() {
            public RequestResultOfboolean Func() throws java.lang.Exception {
                return PatientRemoveReminder( authToken,reminderId);
            }
        });
    }

    public RequestResultOfArrayOfPatientReminderXml PatientGetReminders(final AuthtokenXml authToken) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfPatientReminderXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetReminders");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfPatientReminderXml.class, __result, "PatientGetRemindersResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetReminders");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfPatientReminderXml>, Void, OperationResult<RequestResultOfArrayOfPatientReminderXml>> PatientGetRemindersAsync(final AuthtokenXml authToken)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfPatientReminderXml>() {
            public RequestResultOfArrayOfPatientReminderXml Func() throws java.lang.Exception {
                return PatientGetReminders( authToken);
            }
        });
    }

    public RequestResultOfArrayOfInfoRecordXml PatientGetInfo(final AuthtokenXml authToken, final Integer offset, final Integer limit) throws java.lang.Exception
    {
        return (RequestResultOfArrayOfInfoRecordXml) execute(new UPNIWcfMethod()
        {
            @Override
            public ExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                ExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                __envelope.addMapping("http://tempuri.org/","authToken",new AuthtokenXml().getClass());
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "PatientGetInfo");
                __envelope.setOutputSoapObject(__soapReq);

                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="authToken";
                __info.type= AuthtokenXml.class;
                __info.setValue(authToken!=null?authToken:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="offset";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(offset!=null?offset:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="limit";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(limit!=null?limit:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }

            @Override
            public java.lang.Object ProcessResult(ExtendedSoapSerializationEnvelope __envelope, java.lang.Object __result) throws java.lang.Exception {
                return getResult(RequestResultOfArrayOfInfoRecordXml.class, __result, "PatientGetInfoResult", __envelope);
            }
        },"http://tempuri.org/IPatient/PatientGetInfo");
    }

    public android.os.AsyncTask<OperationResult<RequestResultOfArrayOfInfoRecordXml>, Void, OperationResult<RequestResultOfArrayOfInfoRecordXml>> PatientGetInfoAsync(final AuthtokenXml authToken, final Integer offset, final Integer limit)
    {
        return executeAsyncCallback(new Functions.IFunc<RequestResultOfArrayOfInfoRecordXml>() {
            public RequestResultOfArrayOfInfoRecordXml Func() throws java.lang.Exception {
                return PatientGetInfo( authToken,offset,limit);
            }
        });
    }

    protected java.lang.Object execute(UPNIWcfMethod wcfMethod, String methodName) throws java.lang.Exception
    {
        org.ksoap2.transport.Transport __httpTransport = createTransport();
        __httpTransport.debug=enableLogging;
        ExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport);

        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);
                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        java.lang.Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }

    protected <T> android.os.AsyncTask<OperationResult<T>, Void, OperationResult<T>> executeAsyncCallback(final Functions.IFunc<T> func)
    {
        return new android.os.AsyncTask<OperationResult<T>, Void, OperationResult<T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            }
            @Override
            protected OperationResult<T> doInBackground(OperationResult<T>... params) {
                OperationResult<T> result = new OperationResult<T>();
                try
                {
                    result.Result= func.Func();
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                    result.Exception=ex;
                }
                if (params != null && params.length > 0) {
                    params[0] = result;
                }
                return result;
            }

            @Override
            protected void onPostExecute(OperationResult< T> result)
            {

                callback.Completed(result);
            }
        }//.execute();
                ;
    }

    java.lang.Exception convertToException(org.ksoap2.SoapFault fault, ExtendedSoapSerializationEnvelope envelope)
    {


        return new java.lang.Exception(fault.faultstring);
    }
}