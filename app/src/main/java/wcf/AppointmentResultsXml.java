package wcf;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.9.1
//
// Created by Quasar Development at 10-12-2015
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class AppointmentResultsXml extends AttributeContainer implements KvmSerializable
{

    
    public AppointmentXml Appointment;
    
    public String Complains;
    
    public java.util.Date EditDate;
    
    public ArrayOfstring HealthcareCodes=new ArrayOfstring();
    
    public String Id;
    
    public String Info;
    
    public String SuggestedTreatment;

    public AppointmentResultsXml()
    {
    }

    public AppointmentResultsXml(Object paramObj, ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("Appointment"))
                {
                    Object j = obj;
                    this.Appointment = (AppointmentXml)__envelope.get(j, AppointmentXml.class);
                    continue;
                }
                if (info.name.equals("Complains"))
                {
        
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                    {
                        SoapPrimitive j =(SoapPrimitive) obj;
                        if(j.toString()!=null)
                        {
                            this.Complains = j.toString();
                        }
                    }
                    else if (obj!= null && obj instanceof String){
                        this.Complains = (String)obj;
                    }
                    continue;
                }
                if (info.name.equals("EditDate"))
                {
        
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                    {
                        SoapPrimitive j =(SoapPrimitive) obj;
                        if(j.toString()!=null)
                        {
                            this.EditDate = Helper.ConvertFromWebService(j.toString());
                        }
                    }
                    else if (obj!= null && obj instanceof java.util.Date){
                        this.EditDate = (java.util.Date)obj;
                    }
                    continue;
                }
                if (info.name.equals("HealthcareCodes"))
                {
                    Object j = obj;
                    this.HealthcareCodes = new ArrayOfstring(j,__envelope);
                    continue;
                }
                if (info.name.equals("Id"))
                {
        
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                    {
                        SoapPrimitive j =(SoapPrimitive) obj;
                        if(j.toString()!=null)
                        {
                            this.Id = j.toString();
                        }
                    }
                    else if (obj!= null && obj instanceof String){
                        this.Id = (String)obj;
                    }
                    continue;
                }
                if (info.name.equals("Info"))
                {
        
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                    {
                        SoapPrimitive j =(SoapPrimitive) obj;
                        if(j.toString()!=null)
                        {
                            this.Info = j.toString();
                        }
                    }
                    else if (obj!= null && obj instanceof String){
                        this.Info = (String)obj;
                    }
                    continue;
                }
                if (info.name.equals("SuggestedTreatment"))
                {
        
                    if (obj != null && obj.getClass().equals(SoapPrimitive.class))
                    {
                        SoapPrimitive j =(SoapPrimitive) obj;
                        if(j.toString()!=null)
                        {
                            this.SuggestedTreatment = j.toString();
                        }
                    }
                    else if (obj!= null && obj instanceof String){
                        this.SuggestedTreatment = (String)obj;
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.Appointment!=null?this.Appointment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.Complains!=null?this.Complains:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.EditDate!=null? Helper.getDateTimeFormat().format(this.EditDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.HealthcareCodes!=null?this.HealthcareCodes:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.Id!=null?this.Id:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.Info!=null?this.Info:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.SuggestedTreatment!=null?this.SuggestedTreatment:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 7;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = AppointmentXml.class;
            info.name = "Appointment";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Complains";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "EditDate";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "HealthcareCodes";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Id";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Info";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "SuggestedTreatment";
            info.namespace= "http://schemas.datacontract.org/2004/07/MeetMD.Models.DomainModel";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

}
